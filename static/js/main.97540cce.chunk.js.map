{"version":3,"sources":["schemas/taskSchema.ts","contexts/BoardReducer.ts","hooks/useLocalStorage.ts","mock.ts","contexts/BoardContext.tsx","utils/handleSourceIdColumn.ts","schemas/cardSchema.ts","contexts/EditorReducer.ts","contexts/EditorContext.tsx","components/AddButton/styles.ts","components/AddButton/index.tsx","components/Board/styles.ts","components/Board/index.tsx","components/Card/styles.ts","components/Card/index.tsx","utils/reduceDoneTasks.ts","components/Card/Footer/styles.ts","components/Card/Footer/index.tsx","utils/formatDate.ts","components/Card/Header/styles.ts","components/Card/Header/framerOptions.ts","components/Card/Header/index.tsx","components/Card/TasksList/styles.ts","components/Card/TasksList/framerOptions.ts","components/Card/TasksList/index.tsx","components/CardEditor/styles.ts","components/TagsSelector/styles.ts","schemas/tagColorsSchema.ts","components/TagsSelector/index.tsx","components/CardEditor/index.tsx","components/CardsList/styles.ts","components/CardsList/index.tsx","components/Column/styles.ts","components/Column/index.tsx","components/ColumnInfo/styles.ts","components/ColumnInfo/index.tsx","components/Modal/styles.ts","components/Modal/framerOptions.ts","components/Modal/index.tsx","components/NoCardsPlaceholder/styles.ts","components/NoCardsPlaceholder/index.tsx","utils/returnColorsSchemaItem.ts","components/Tag/styles.ts","components/Tag/index.tsx","components/Textarea/styles.ts","components/Textarea/index.tsx","GlobalStyles.ts","App.tsx","index.tsx"],"names":["taskSchema","taskId","isDone","task","BoardReducer","state","action","type","payload","MOVE_CARD_TO_ANOTHER_COLUMN","destinationItems","destination","droppableId","items","splice","index","movedItem","source","MOVE_CARD_TO_SAME_COLUMN","sourceItems","CREATE_CARD","newCard","cardId","uuidv4","description","cardData","tags","tasks","createdAt","Date","toISOString","lastUpdate","columnId","UPDATE_CARD","updatedCard","map","item","DELETE_CARD","filter","TOGGLE_TASK_IS_DONE","ADD_TASK_TO_CARD","id","EDIT_CARD_TASK","taskText","DELETE_CARD_TASK","MOVE_CARD_TASK","cardTasks","movedTask","useLocalStorage","key","initialState","useState","savedKeyName","initialValue","localStorage","getItem","savedValue","JSON","parse","Function","getSavedValue","value","setValue","setValueToLocalStorage","useCallback","setItem","stringify","useEffect","console","log","itemsMock1","itemsMock2","itemsMock3","itemsMock4","columnsMock","backlog","name","todo","doing","done","BoardContext","createContext","mock","BoardProvider","children","localStorageColumns","setLocalStorageColumns","useReducer","columns","dispatch","context","handleDragEnd","result","sourceId","destinationId","moveCard","handleSourceIdColumn","isMovedToSameColumn","moveTask","column","includes","replace","actions","dragActionTypes","createCardOnColumn","updateCardFromColumn","deleteCardFromColumn","toggleTaskIsDone","addTaskToCard","editCardTask","deleteCardTask","Provider","cardSchema","columnName","EditorReducer","OPEN_EDITOR","isEditorOpen","currentEditing","CLOSE_EDITOR","EDIT_CARD_DATA","EditorContext","EditorProvider","editorInitialState","editor","handleOpenEditor","handleCloseEditor","handleEditCardData","Container","styled","div","Button","button","AddButton","onClick","color","size","Board","boardContext","useContext","editorContext","ColumnsMemo","useMemo","Object","entries","cards","totalCards","length","handleOpenModal","NoCardsPlaceholder","onDragEnd","CardContainer","props","snapshot","isDragging","TagsList","Card","isTasksListOpen","setIsTasksListOpen","isMenuOpen","setIsMenuOpen","editingCardData","setEditingCardData","cardRef","useRef","setCurrentEditingTask","editingCardValues","handleClickOutside","event","hasCurrent","current","isClickedInside","contains","target","timer","setTimeout","assign","clearTimeout","document","addEventListener","removeEventListener","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","prevState","handleAddTask","handleEditCard","handleDeleteCard","tag","AnimatePresence","openTasksList","totalDoneTasks","tasksArray","reduce","total","totalTasks","DateInfo","StoryInfo","DoneAndTotal","Footer","date","formatDistance","addSuffix","Description","p","Options","OptionsButton","Menu","motion","ul","Option","li","framerOptions","initial","height","opacity","animate","transition","duration","exit","Header","className","Task","CheckBox","TextareaContainer","RemoveTask","DragArea","NoneTasks","TasksList","providedDroppable","providedDraggable","autofocus","handleChange","ev","currentTarget","placeholder","span","Label","TaskTextarea","textarea","ButtonsContainer","colors","background","horizontalPadding","font","disabled","shadow","Selector","isSelected","tagColorsSchema","Backend","Bug","Business","Frontend","Devops","Mobile","QA","TagsSelector","selecteds","options","setOptions","test","tagName","tagData","option","edited","selectedTags","handleSelectTags","CardEditor","textareaRef","handleButtonAction","types","executeOperationFunction","isModalOpen","defaultValue","onChange","cardTags","trim","ListContainer","CardsList","droppableProps","Column","ColumnName","Counter","ColumnInfo","Backdrop","ModalWindow","ModalContent","delay","scale","Modal","backdropAnimation","modalWindowAnimation","modalContentAnimation","Text","returnColorSchemaItem","isFocused","Tag","Field","TextareaAutosize","Textarea","focus","async","GlobalStyles","createGlobalStyle","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.97540cce.chunk.js","sourcesContent":["export interface TaskSchema {\n  taskId: string;\n  isDone: boolean;\n  task: string;\n}\n\nexport const taskSchema: TaskSchema = {\n  taskId: '',\n  isDone: false,\n  task: '',\n};\n\nexport const createTaskSchema = (id: string) => {\n  return {\n    ...taskSchema,\n    taskId: id,\n  };\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { createTaskSchema } from '../schemas/taskSchema';\n\ntype State = {\n  localStorageColumns?: any[];\n  columns?: any;\n  [key: string]: any;\n};\n\ntype Action = {\n  type: string;\n  payload: string | any;\n};\n\ntype ReducerTypes = {\n  [key: string]: any;\n};\n\nexport const BoardReducer: React.Reducer<State, Action> = (state, action) => {\n  const { type, payload } = action;\n\n  const setCardToAnotherColumn = () => {\n    const destination = state[payload.destination.droppableId];\n    const destinationItems = destination.items;\n    destinationItems.splice(payload.destination.index, 0, payload.movedItem);\n\n    return {\n      ...state,\n      [payload.source.droppableId]: {\n        ...state[payload.source.droppableId],\n        items: state[payload.source.droppableId].items,\n      },\n      [payload.destination.droppableId]: {\n        ...state[payload.destination.droppableId],\n        items: destinationItems,\n      },\n    };\n  };\n\n  const setCardToSameColumn = () => {\n    const sourceItems = state[payload.source.droppableId].items;\n    sourceItems.splice(payload.destination.index, 0, payload.movedItem);\n\n    return {\n      ...state,\n      [payload.source.droppableId]: {\n        ...state[payload.source.droppableId],\n        items: sourceItems,\n      },\n    };\n  };\n\n  const setCreateCard = () => {\n    const newCard = {\n      cardId: uuidv4(),\n      description: payload.cardData.description,\n      tags: payload.cardData.tags,\n      tasks: payload.cardData.tasks,\n      createdAt: new Date().toISOString(),\n      lastUpdate: new Date().toISOString(),\n    };\n\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n        items: [newCard, ...state[payload.columnId].items],\n      },\n    };\n  };\n\n  const setUpdateCard = () => {\n    const updatedCard = {\n      cardId: payload.cardData.cardId,\n      description: payload.cardData.description,\n      tags: payload.cardData.tags,\n      tasks: payload.cardData.tasks,\n      createdAt: payload.cardData.createdAt,\n      lastUpdate: new Date().toISOString(),\n    };\n\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n        items: state[payload.columnId].items.map((item: any) =>\n          item.cardId === payload.cardData.cardId ? updatedCard : item\n        ),\n      },\n    };\n  };\n\n  const setDeleteCard = () => {\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n        items: state[payload.columnId].items.filter(\n          (item: any) => item.cardId !== payload.cardId\n        ),\n      },\n    };\n  };\n\n  const setToggleTaskIsDone = () => {\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n        items: state[payload.columnId].items.map((item: any) =>\n          item.cardId === payload.cardId\n            ? {\n                ...item,\n                lastUpdate: new Date().toISOString(),\n                tasks: item.tasks.map((task: any) =>\n                  task.taskId === payload.taskId\n                    ? { ...task, isDone: !task.isDone }\n                    : task\n                ),\n              }\n            : item\n        ),\n      },\n    };\n  };\n\n  const setAddTaskToCard = () => {\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n        items: state[payload.columnId].items.map((item: any) =>\n          item.cardId === payload.cardId\n            ? {\n                ...item,\n                lastUpdate: new Date().toISOString(),\n                tasks: [createTaskSchema(uuidv4()), ...item.tasks],\n              }\n            : item\n        ),\n      },\n    };\n  };\n\n  const setEditCardTask = () => {\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n        items: state[payload.columnId].items.map((item: any) =>\n          item.cardId === payload.cardId\n            ? {\n                ...item,\n                lastUpdate: new Date().toISOString(),\n                tasks: item.tasks.map((task: any) =>\n                  task.taskId === payload.taskId\n                    ? { ...task, task: payload.taskText }\n                    : task\n                ),\n              }\n            : item\n        ),\n      },\n    };\n  };\n\n  const setDeleteCardTask = () => {\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n        items: state[payload.columnId].items.map((item: any) =>\n          item.cardId === payload.cardId\n            ? {\n                ...item,\n                tasks: item.tasks.filter(\n                  (task: any) => task.taskId !== payload.taskId\n                ),\n              }\n            : item\n        ),\n      },\n    };\n  };\n\n  const setMoveCardTask = () => {\n    const [card] = state[payload.columnId].items.filter(\n      (item: any) => item.cardId === payload.cardId\n    );\n    const cardTasks = card.tasks;\n    const [movedTask] = cardTasks.splice(payload.source.index, 1);\n    cardTasks.splice(payload.destination.index, 0, movedTask);\n\n    return {\n      ...state,\n      [payload.columnId]: {\n        ...state[payload.columnId],\n      },\n    };\n  };\n\n  // const returnSetterReducer = () => {\n  //   if (type === 'MOVE_CARD_TO_ANOTHER_COLUMN') return setCardToAnotherColumn();\n  //   if (type === 'MOVE_CARD_TO_SAME_COLUMN') return setCardToSameColumn();\n  //   if (type === 'CREATE_CARD') return setCreateCard();\n  //   if (type === 'UPDATE_CARD') return setUpdateCard();\n  //   if (type === 'DELETE_CARD') return setDeleteCard();\n  //   if (type === 'TOGGLE_TASK_IS_DONE') return setToggleTaskIsDone();\n  //   if (type === 'ADD_TASK_TO_CARD') return setAddTaskToCard();\n  //   if (type === 'EDIT_CARD_TASK') return setEditCardTask();\n  //   if (type === 'DELETE_CARD_TASK') return setDeleteCardTask();\n  //   if (type === 'MOVE_CARD_TASK') return setMoveCardTask();\n  //   return undefined;\n  // };\n\n  // return returnSetterReducer() || state;\n\n  const setStateReducerTypes: ReducerTypes = {\n    MOVE_CARD_TO_ANOTHER_COLUMN: setCardToAnotherColumn,\n    MOVE_CARD_TO_SAME_COLUMN: setCardToSameColumn,\n    CREATE_CARD: setCreateCard,\n    UPDATE_CARD: setUpdateCard,\n    DELETE_CARD: setDeleteCard,\n    TOGGLE_TASK_IS_DONE: setToggleTaskIsDone,\n    ADD_TASK_TO_CARD: setAddTaskToCard,\n    EDIT_CARD_TASK: setEditCardTask,\n    DELETE_CARD_TASK: setDeleteCardTask,\n    MOVE_CARD_TASK: setMoveCardTask,\n  };\n\n  return setStateReducerTypes[type]() || state;\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nexport default function useLocalStorage(key: string, initialState: any[]) {\n  const [value, setValue] = useState(() => {\n    return getSavedValue(key, initialState);\n  });\n\n  function getSavedValue(savedKeyName: string, initialValue: any[]) {\n    if (!localStorage.getItem(savedKeyName)) return initialValue;\n    const savedValue = JSON.parse(localStorage.getItem(savedKeyName) || '');\n    if (savedValue) return savedValue;\n    if (initialValue instanceof Function) return initialValue();\n    return initialValue;\n  }\n\n  const setValueToLocalStorage = useCallback(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  useEffect(() => {\n    setValueToLocalStorage();\n    console.log(value);\n  }, [value, setValueToLocalStorage]);\n\n  return [value, setValue];\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nconst itemsMock1 = [\n  {\n    cardId: uuidv4(),\n    description: 'Nam aliquam sollicitudin lorem, et tempor magna dapibus.',\n    tags: ['Frontend', 'Backend', 'Devops'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Mauris ligula leo, cursus vitae enim non.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Quisque neque ligula, ullamcorper.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Praesent in nulla nec elit tristique eleifend sed eget lacus. Nam cursus odio ut.',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-06-19T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'Pellentesque fermentum, tortor sed lacinia.',\n    tags: ['Backend'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Praesent vel leo risus. Integer erat tellus, elementum ut velit non.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'consectetur vehicula lorem.',\n      },\n    ],\n    createdAt: '2021-05-11T19:39:33.863Z',\n    lastUpdate: '2021-06-11T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'isDonec vel pulvinar ex, sit amet vehicula nisl.',\n    tags: ['Frontend', 'Bug'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Quisque congue lacus nibh, quis sagittis ante blandit eu. Praesent rhoncus fermentum est.',\n      },\n    ],\n    createdAt: '2021-05-11T19:39:33.863Z',\n    lastUpdate: '2021-06-11T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'Vivamus venenatis leo vitae sapien tempus, eleifend.',\n    tags: ['Backend', 'Bug'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Phasellus bibendum maximus nulla, faucibus',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-06-17T19:39:33.863Z',\n  },\n];\n\nconst itemsMock2 = [\n  {\n    cardId: uuidv4(),\n    description: 'Duis elementum dictum nibh non hendrerit.',\n    tags: ['Frontend', 'Backend'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Donec facilisis consectetur odio vitae porta.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Donec non pulvinar tellus, id tincidunt mi.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Mauris consequat lectus quis.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'In hac habitasse.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Nunc elementum dui eu nibh posuere, et mollis nulla tincidunt.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Quisque congue lacus.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Mauris consequat lectus quis.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Ut euismod felis eget quam vestibulum.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Mauris consequat lectus quis.',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-06-19T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'Vivamus id nunc ut est condimentum molestie.',\n    tags: ['Frontend', 'Devops'],\n    tasks: [],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-06-19T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'Nunc blandit maximus accumsan.',\n    tags: ['Frontend', 'Backend'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Morbi ut aliquet ante, in fermentum quam. Proin varius sodales magna a posuere.',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-06-04T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'In posuere bibendum nulla iaculis gravida.',\n    tags: ['QA'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Mauris ligula leo, cursus vitae enim non.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Quisque neque ligula, ullamcorper.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Praesent in nulla nec elit tristique eleifend sed eget lacus. Nam cursus odio ut.',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-06-03T19:39:33.863Z',\n  },\n];\n\nconst itemsMock3 = [\n  {\n    cardId: uuidv4(),\n    description: 'Etiam bibendum, nisi at vestibulum aliquam.',\n    tags: ['QA', 'Backend'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Mauris ligula leo, cursus vitae enim non.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Quisque neque ligula, ullamcorper.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Praesent in nulla nec elit tristique eleifend sed eget lacus. Nam cursus odio ut.',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-05-27T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'isDonec posuere interdum posuere.',\n    tags: ['Backend'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Mauris ligula leo, cursus vitae enim non.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Quisque neque ligula, ullamcorper.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Praesent in nulla nec elit tristique eleifend sed eget lacus. Nam cursus odio ut.',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-05-28T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'Nullam nunc magna, tristique ut varius eget.',\n    tags: ['Frontend', 'Backend'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: false,\n        task: 'Mauris ligula leo, cursus vitae enim non.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Quisque neque ligula, ullamcorper.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Praesent in nulla nec elit tristique eleifend sed eget lacus. Nam cursus odio ut.',\n      },\n    ],\n    createdAt: '2021-05-19T19:39:33.863Z',\n    lastUpdate: '2021-05-26T19:39:33.863Z',\n  },\n];\n\nconst itemsMock4 = [\n  {\n    cardId: uuidv4(),\n    description: 'Cras magna eros, finibus suscipit.',\n    tags: ['UX/UI', 'Business'],\n    tasks: [\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Quisque neque ligula, ullamcorper.',\n      },\n      {\n        taskId: uuidv4(),\n        isDone: true,\n        task: 'Praesent in nulla nec elit tristique eleifend sed eget lacus. Nam cursus odio ut.',\n      },\n    ],\n    createdAt: '2021-05-09T19:39:33.863Z',\n    lastUpdate: '2021-05-13T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'Duis dignissim eros at eleifend.',\n    tags: ['UX/UI'],\n    tasks: [],\n    createdAt: '2021-05-15T19:39:33.863Z',\n    lastUpdate: '2021-05-16T19:39:33.863Z',\n  },\n  {\n    cardId: uuidv4(),\n    description: 'pretium et elit.',\n    tags: ['Frontend', 'Backend'],\n    tasks: [],\n    createdAt: '2021-05-14T19:39:33.863Z',\n    lastUpdate: '2021-05-17T19:39:33.863Z',\n  },\n];\n\nexport const columnsMock = {\n  backlog: {\n    columnId: uuidv4(),\n    name: 'Backlog',\n    items: itemsMock1,\n  },\n  todo: {\n    columnId: uuidv4(),\n    name: 'To-do',\n    items: itemsMock2,\n  },\n  doing: {\n    columnId: uuidv4(),\n    name: 'Doing',\n    items: itemsMock3,\n  },\n  done: {\n    columnId: uuidv4(),\n    name: 'Done',\n    items: itemsMock4,\n  },\n};\n","import { createContext, useReducer, useEffect } from 'react';\nimport { BoardReducer } from './BoardReducer';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { columnsMock } from '../mock';\nimport { handleSourceIdColumn } from '../utils/handleSourceIdColumn';\n\nexport interface BoardContextInterface {\n  children?: JSX.Element;\n  localStorageColumns?: any[];\n  columns?: any;\n  handleDragEnd?: any;\n  createCardOnColumn?: any;\n  updateCardFromColumn?: any;\n  deleteCardFromColumn?: any;\n  toggleTaskIsDone?: any;\n  addTaskToCard?: any;\n  editCardTask?: any;\n  deleteCardTask?: any;\n}\n\nexport const BoardContext = createContext<BoardContextInterface | null>(null);\n\nconst mock: any = columnsMock;\n\nexport const BoardProvider = ({\n  children,\n}: BoardContextInterface): JSX.Element => {\n  const [localStorageColumns, setLocalStorageColumns] = useLocalStorage(\n    'columns',\n    mock\n  );\n  const [columns, dispatch] = useReducer(BoardReducer, localStorageColumns);\n\n  const handleDragEnd = (result: any) => {\n    const { type, source, destination } = result;\n    if (!destination) return;\n    const sourceId = source.droppableId;\n    const destinationId = destination.droppableId;\n\n    const moveCard = () => {\n      const sourceIdColumnData = handleSourceIdColumn(sourceId, columns);\n      const [movedItem] = sourceIdColumnData.items.splice(source.index, 1);\n      const isMovedToSameColumn = sourceId === destinationId;\n\n      if (isMovedToSameColumn) {\n        return dispatch({\n          type: 'MOVE_CARD_TO_SAME_COLUMN',\n          payload: { source, destination, movedItem },\n        });\n      }\n\n      if (!isMovedToSameColumn) {\n        return dispatch({\n          type: 'MOVE_CARD_TO_ANOTHER_COLUMN',\n          payload: { source, destination, movedItem },\n        });\n      }\n    };\n\n    const moveTask = () => {\n      const columnsArray = ['backlog', 'todo', 'doing', 'done'];\n      const [columnId] = columnsArray.filter((column) =>\n        sourceId.includes(column)\n      );\n      const cardId = sourceId.replace(`${columnId}-`, '');\n      return dispatch({\n        type: 'MOVE_CARD_TASK',\n        payload: { columnId, source, destination, cardId },\n      });\n    };\n\n    const dragActionTypes = (action: string) => {\n      const actions = {\n        cards: moveCard,\n        tasks: moveTask,\n      };\n      if (action === 'cards') return actions.cards();\n      if (action === 'tasks') return actions.tasks();\n    };\n\n    dragActionTypes(type);\n  };\n\n  const createCardOnColumn = (columnId: string, cardData: any) => {\n    dispatch({ type: 'CREATE_CARD', payload: { columnId, cardData } });\n  };\n\n  const updateCardFromColumn = (columnId: string, cardData: any) => {\n    dispatch({ type: 'UPDATE_CARD', payload: { columnId, cardData } });\n  };\n\n  const deleteCardFromColumn = (columnId: string, cardId: string) => {\n    dispatch({ type: 'DELETE_CARD', payload: { columnId, cardId } });\n  };\n\n  const toggleTaskIsDone = (\n    columnId: string,\n    cardId: string,\n    taskId: string\n  ) => {\n    dispatch({\n      type: 'TOGGLE_TASK_IS_DONE',\n      payload: { columnId, cardId, taskId },\n    });\n  };\n\n  const addTaskToCard = (columnId: string, cardId: string) => {\n    dispatch({ type: 'ADD_TASK_TO_CARD', payload: { columnId, cardId } });\n  };\n\n  const editCardTask = ({ columnId, cardId, taskId, taskText }: any) => {\n    dispatch({\n      type: 'EDIT_CARD_TASK',\n      payload: { columnId, cardId, taskId, taskText },\n    });\n  };\n\n  const deleteCardTask = ({ columnId, cardId, taskId }: any) => {\n    dispatch({\n      type: 'DELETE_CARD_TASK',\n      payload: { columnId, cardId, taskId },\n    });\n  };\n\n  useEffect(() => {\n    setLocalStorageColumns(columns);\n  }, [columns, setLocalStorageColumns]);\n\n  const context: BoardContextInterface = {\n    columns,\n    handleDragEnd,\n    createCardOnColumn,\n    updateCardFromColumn,\n    deleteCardFromColumn,\n    toggleTaskIsDone,\n    addTaskToCard,\n    editCardTask,\n    deleteCardTask,\n  };\n\n  return (\n    <BoardContext.Provider value={context}>{children}</BoardContext.Provider>\n  );\n};\n","export function handleSourceIdColumn(sourceId: string, columns: any) {\n  if (sourceId === 'backlog') return columns.backlog;\n  if (sourceId === 'todo') return columns.todo;\n  if (sourceId === 'doing') return columns.doing;\n  if (sourceId === 'done') return columns.done;\n}\n","import { TaskSchema } from './taskSchema';\n\nexport interface CardSchema {\n  columnName: string;\n  columnId: string;\n  cardId: string;\n  description: string;\n  tags: string[];\n  tasks: TaskSchema[];\n  createdAt: string;\n  lastUpdate: string;\n}\n\nexport const cardSchema: CardSchema = {\n  columnName: '',\n  columnId: '',\n  cardId: '',\n  description: '',\n  tags: [],\n  tasks: [],\n  createdAt: '',\n  lastUpdate: '',\n};\n","import { cardSchema } from '../schemas/cardSchema';\n\ntype State = {\n  localStorageColumns?: any[];\n  columns?: any;\n  [key: string]: any;\n};\n\ntype Action = {\n  type: string;\n  payload?: string | any;\n};\n\ntype ReducerTypes = {\n  [key: string]: any;\n};\n\nexport const EditorReducer: React.Reducer<State, Action> = (state, action) => {\n  const { type, payload } = action;\n\n  const setOpenEditor = () => {\n    return {\n      ...state,\n      isEditorOpen: true,\n      currentEditing: {\n        ...state.currentEditing,\n        ...payload,\n      },\n    };\n  };\n\n  const setCloseEditor = () => {\n    return {\n      isEditorOpen: false,\n      currentEditing: cardSchema,\n    };\n  };\n\n  const setEditCardData = () => {\n    return {\n      ...state,\n      currentEditing: {\n        ...state.currentEditing,\n        [payload.key]: payload.value,\n      },\n    };\n  };\n\n  const setStateReducerTypes: ReducerTypes = {\n    OPEN_EDITOR: setOpenEditor,\n    CLOSE_EDITOR: setCloseEditor,\n    EDIT_CARD_DATA: setEditCardData,\n  };\n\n  return setStateReducerTypes[type]() || state;\n};\n","import { createContext, useReducer, useCallback } from 'react';\nimport { EditorReducer } from './EditorReducer';\nimport { cardSchema } from '../schemas/cardSchema';\n\nexport interface EditorContextInterface {\n  children?: JSX.Element;\n  editor?: any;\n  handleOpenEditor?: any;\n  handleCloseEditor?: any;\n  handleEditCardData?: any;\n}\n\nexport const EditorContext = createContext<EditorContextInterface | null>(null);\n\nexport const EditorProvider = ({\n  children,\n}: EditorContextInterface): JSX.Element => {\n  const editorInitialState = {\n    isEditorOpen: false,\n    currentEditing: cardSchema,\n  };\n  const [editor, dispatch] = useReducer(EditorReducer, editorInitialState);\n\n  const handleOpenEditor = useCallback((cardData) => {\n    dispatch({ type: 'OPEN_EDITOR', payload: cardData });\n  }, []);\n\n  const handleCloseEditor = useCallback(() => {\n    dispatch({ type: 'CLOSE_EDITOR' });\n  }, []);\n\n  const handleEditCardData = ({ key, value }: any) => {\n    dispatch({ type: 'EDIT_CARD_DATA', payload: { key, value } });\n  };\n\n  return (\n    <EditorContext.Provider\n      value={{\n        editor,\n        handleOpenEditor,\n        handleCloseEditor,\n        handleEditCardData,\n      }}\n    >\n      {children}\n    </EditorContext.Provider>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-bottom: 4px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 36px;\n  background-color: #fff;\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: #636363;\n  font-size: 14px;\n  border: 1px solid #ccc;\n  transition: 100ms ease-in-out;\n  user-select: none;\n\n  &:hover {\n    border: 1px solid transparent;\n    box-shadow: 0 0 0 0.2rem #0d6efd;\n  }\n\n  &:active {\n    box-shadow: 0 0 0 0.125rem #0d6efd;\n  }\n\n  & > svg {\n    margin-right: 6px;\n  }\n`;\n","import { Container, Button } from './styles';\nimport { GrAdd } from 'react-icons/gr';\n\ninterface Props {\n  handleOpenEditor: any;\n}\n\nexport const AddButton = ({ handleOpenEditor }: Props): JSX.Element => {\n  return (\n    <Container>\n      <Button onClick={handleOpenEditor}>\n        <GrAdd color='#636363' size={14} />\n        Add Card\n      </Button>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 0 16px;\n`;\n","import { useContext, useMemo } from 'react';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BoardContext } from '../../contexts/BoardContext';\nimport { EditorContext } from '../../contexts/EditorContext';\n\nimport { Container } from './styles';\nimport {\n  AddButton,\n  Card,\n  Column,\n  CardsList,\n  ColumnInfo,\n  NoCardsPlaceholder,\n} from '../';\n\nexport const Board = (): JSX.Element => {\n  const boardContext = useContext(BoardContext);\n  const editorContext = useContext(EditorContext);\n\n  const ColumnsMemo = useMemo(() => {\n    return Object.entries(boardContext?.columns).map(\n      ([columnId, { name: columnName, items: cards }]: any) => (\n        <Column key={columnId}>\n          <>\n            <ColumnInfo columnName={columnName} totalCards={cards.length} />\n\n            <CardsList id={columnId}>\n              <>\n                <AddButton\n                  handleOpenEditor={() =>\n                    editorContext?.handleOpenEditor({ columnName, columnId })\n                  }\n                />\n\n                {!!cards.length ? (\n                  cards.map((cardData: any, index: number) => (\n                    <Card\n                      key={cardData.cardId}\n                      index={index}\n                      columnId={columnId}\n                      cardData={cardData}\n                      handleOpenModal={() =>\n                        editorContext?.handleOpenEditor({\n                          columnName,\n                          columnId,\n                          ...cardData,\n                        })\n                      }\n                    />\n                  ))\n                ) : (\n                  <NoCardsPlaceholder />\n                )}\n              </>\n            </CardsList>\n          </>\n        </Column>\n      )\n    );\n  }, [boardContext?.columns, editorContext]);\n\n  return (\n    <DragDropContext\n      onDragEnd={(result) => boardContext?.handleDragEnd(result)}\n    >\n      <Container>{ColumnsMemo}</Container>\n    </DragDropContext>\n  );\n};\n","import styled from 'styled-components';\n\ninterface DragProps {\n  provided?: any;\n  snapshot?: any;\n}\n\nexport const Container = styled.div<DragProps>`\n  display: flex;\n  max-width: 275px;\n  min-width: 275px;\n  height: 100%;\n  margin: 8px 0 0 0;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n\n  &[data-rbd-drag-handle-context-id] {\n    cursor: default;\n  }\n\n  .options {\n    visibility: hidden;\n  }\n\n  &:hover {\n    .options {\n      visibility: visible;\n    }\n  }\n`;\n\nexport const CardContainer = styled.div<DragProps>`\n  display: flex;\n  flex-direction: column;\n  padding: 8px 12px;\n  min-height: 50px;\n  color: #000;\n  background-color: #fff;\n  user-select: none;\n  box-shadow: ${(props) =>\n    props.snapshot.isDragging\n      ? 'rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px;'\n      : 'rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;'};\n  width: 100%;\n  border-radius: 8px;\n  transition: 100ms ease-in-out;\n  border: 1px solid transparent;\n\n  &:hover {\n    border: 1px solid transparent;\n    box-shadow: 0 0 0 0.2rem #0d6efd;\n  }\n`;\n\nexport const TagsList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 12px 0;\n`;\n","import { useState, useContext, useEffect, useRef, useCallback } from 'react';\n\nimport { BoardContext } from '../../contexts/BoardContext';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport { Container, CardContainer, TagsList } from './styles';\nimport { Header, TasksList, Footer, Tag } from '../';\n\nimport { AnimatePresence } from 'framer-motion';\n\nimport { reduceDoneTasks } from '../../utils/reduceDoneTasks';\n\ninterface Props {\n  index: number;\n  columnId: string;\n  cardData: any;\n  handleOpenModal: any;\n}\n\nexport const Card = ({\n  index,\n  columnId,\n  cardData,\n  handleOpenModal,\n}: Props): JSX.Element => {\n  const { cardId, description, tags, tasks, createdAt, lastUpdate } = cardData;\n\n  const [isTasksListOpen, setIsTasksListOpen] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [editingCardData, setEditingCardData] = useState(null);\n\n  const boardContext = useContext(BoardContext);\n\n  const cardRef = useRef<HTMLDivElement>(null!);\n\n  const setCurrentEditingTask = (editingCardValues: any) => {\n    setEditingCardData(editingCardValues);\n  };\n\n  const handleAddTask = () => {\n    if (!isTasksListOpen) setIsTasksListOpen(true);\n    boardContext?.addTaskToCard(columnId, cardId);\n    setIsMenuOpen(false);\n  };\n\n  const handleEditCard = () => {\n    setIsMenuOpen(false);\n    handleOpenModal();\n  };\n\n  const handleClickOutside = useCallback(\n    (event) => {\n      const hasCurrent = cardRef.current;\n      const isClickedInside = !!cardRef?.current?.contains(event.target);\n      if (hasCurrent && isClickedInside && isMenuOpen)\n        return setIsMenuOpen(false);\n      if (hasCurrent && !isClickedInside) return setIsMenuOpen(false);\n    },\n    [isMenuOpen]\n  );\n\n  useEffect(() => {\n    if (editingCardData) {\n      const timer = setTimeout(() => {\n        boardContext?.editCardTask(Object.assign({}, editingCardData));\n        setEditingCardData(null);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [editingCardData, boardContext?.editCardTask, boardContext]);\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <Draggable draggableId={cardId} key={cardId} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          ref={provided.innerRef}\n          provided={provided}\n          snapshot={snapshot}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <CardContainer snapshot={snapshot} ref={cardRef}>\n            <Header\n              description={description}\n              isMenuOpen={isMenuOpen}\n              setIsMenuOpen={() => setIsMenuOpen((prevState) => !prevState)}\n              handleAddTask={() => handleAddTask()}\n              handleEditCard={() => handleEditCard()}\n              handleDeleteCard={() =>\n                boardContext?.deleteCardFromColumn(columnId, cardId)\n              }\n            />\n\n            <TagsList>\n              {tags.map((tag: any) => (\n                <Tag tag={tag} key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </TagsList>\n\n            <AnimatePresence>\n              {isTasksListOpen && (\n                <TasksList\n                  tasks={tasks}\n                  columnId={columnId}\n                  cardId={cardId}\n                  setCurrentEditingTask={setCurrentEditingTask}\n                />\n              )}\n            </AnimatePresence>\n\n            <Footer\n              lastUpdate={lastUpdate}\n              createdAt={createdAt}\n              openTasksList={() =>\n                setIsTasksListOpen((prevState) => !prevState)\n              }\n              totalDoneTasks={reduceDoneTasks(tasks)}\n              totalTasks={tasks.length}\n            />\n          </CardContainer>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import { TaskSchema } from \"../schemas/taskSchema\";\n\nexport const reduceDoneTasks = (tasksArray: TaskSchema[]) => {\n  return tasksArray.reduce(\n    (total, current) => (current.isDone ? total + 1 : total),\n    0\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 8px 0 0 0;\n  margin-top: 6px;\n`;\n\nexport const DateInfo = styled.div`\n  font-size: 13px;\n`;\n\nexport const StoryInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Notes = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n`;\n\nexport const DoneAndTotal = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: '#fff';\n  font-size: 13px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 3px 6px;\n  border-radius: 6px;\n  cursor: pointer;\n  letter-spacing: 2px;\n\n  & > svg {\n    margin-right: 6px;\n    margin-bottom: 2px;\n  }\n\n  &:hover {\n    box-shadow: 0 0 0 0.1rem #0d6efd;\n  }\n`;\n","import { Container, DateInfo, StoryInfo, DoneAndTotal } from './styles';\n\nimport { BsCheckBox } from 'react-icons/bs';\nimport { formatDate } from '../../../utils/formatDate';\n\ninterface Props {\n  lastUpdate: string;\n  createdAt: string;\n  openTasksList: any;\n  totalDoneTasks: number;\n  totalTasks: number;\n}\n\nexport const Footer = ({\n  lastUpdate,\n  createdAt,\n  openTasksList,\n  totalDoneTasks,\n  totalTasks,\n}: Props): JSX.Element => {\n  return (\n    <Container>\n      <DateInfo>{formatDate(lastUpdate || createdAt)}</DateInfo>\n      <StoryInfo>\n        <DoneAndTotal onClick={openTasksList}>\n          <BsCheckBox />\n          {`${totalDoneTasks}/${totalTasks}`}\n        </DoneAndTotal>\n      </StoryInfo>\n    </Container>\n  );\n};\n","import { formatDistance } from 'date-fns';\n\nexport const formatDate = (date: string) => {\n  return formatDistance(new Date(date), new Date(), { addSuffix: true });\n};\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\ninterface ButtonProps {\n  onClick: React.MouseEventHandler;\n  isMenuOpen: boolean;\n}\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n`;\n\nexport const Description = styled.p`\n  margin: 0;\n  font-weight: 500;\n  font-size: 14px;\n  padding-right: 12px;\n`;\n\nexport const Options = styled.div`\n  position: absolute;\n  transition: visibility 100ms ease-in-out;\n  right: 0;\n`;\n\nexport const OptionsButton = styled.div<ButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  min-width: 32px;\n  height: 32px;\n  background-color: ${(props) => (props.isMenuOpen ? '#eee' : '#fff')};\n  border-radius: 50%;\n  transition: background-color 100ms ease-in-out;\n  position: relative;\n  left: 7px;\n  bottom: 3px;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nexport const Menu = styled(motion.ul)`\n  display: flex;\n  flex-direction: column;\n  width: 132px;\n  background-color: #fff;\n  position: absolute;\n  top: 29px;\n  right: -7px;\n  border-radius: 4px;\n  overflow: hidden;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  z-index: 2;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 10px 15px -3px,\n    rgba(0, 0, 0, 0.05) 0px 4px 6px -2px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px,\n    rgba(0, 0, 0, 0.05) 0px 4px 6px -2px;\n`;\n\nexport const Option = styled.li`\n  padding: 8px 16px;\n  transition: background-color 25ms ease-in-out;\n  font-weight: 500;\n  font-size: 13px;\n  color: ${(props) => (props.color ? props.color : '#000')};\n\n  &:hover {\n    background-color: ${(props) => (props.color ? props.color : '#0d6efd')};\n    color: #fff;\n    cursor: pointer;\n  }\n`;\n","export const framerOptions = {\n  initial: { height: 0, opacity: 0 },\n  animate: { height: 'auto', opacity: 1 },\n  transition: { duration: 0.15 },\n  exit: { height: 0, opacity: 0 },\n};\n","import {\n  Container,\n  Description,\n  Options,\n  OptionsButton,\n  Menu,\n  Option,\n} from './styles';\n\nimport { AnimatePresence } from 'framer-motion';\nimport { MdMoreHoriz } from 'react-icons/md';\nimport { framerOptions } from './framerOptions';\n\ninterface Props {\n  description: string;\n  setIsMenuOpen: any;\n  isMenuOpen: boolean;\n  handleAddTask: any;\n  handleEditCard: any;\n  handleDeleteCard: any;\n}\n\nexport const Header = ({\n  description,\n  setIsMenuOpen,\n  isMenuOpen,\n  handleAddTask,\n  handleEditCard,\n  handleDeleteCard,\n}: Props): JSX.Element => {\n  return (\n    <Container>\n      <Description>{description}</Description>\n\n      <Options className='options'>\n        <OptionsButton onClick={setIsMenuOpen} isMenuOpen={isMenuOpen}>\n          <MdMoreHoriz size={24} />\n        </OptionsButton>\n\n        <AnimatePresence>\n          {isMenuOpen && (\n            <Menu {...framerOptions}>\n              <Option onClick={handleAddTask}>New Task</Option>\n              <Option onClick={handleEditCard}>Edit Card</Option>\n              <Option onClick={handleDeleteCard} color='#f44336'>\n                Delete Card\n              </Option>\n            </Menu>\n          )}\n        </AnimatePresence>\n      </Options>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\ninterface CheckboxProps {\n  isDone: boolean;\n}\n\nexport const Container = styled(motion.ul)`\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding-top: 4px;\n  overflow: hidden;\n`;\n\nexport const Task = styled.div`\n  display: flex;\n  padding-bottom: 8px;\n  font-size: 14px;\n  position: relative;\n  overflow: visible;\n  background-color: #fff;\n  border-radius: 4px;\n`;\n\nexport const CheckBox = styled.div<CheckboxProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) => (props.isDone ? '#0d6efd' : '#fff')};\n  border: 1px solid #0d6efd;\n  width: 16px;\n  min-width: 16px;\n  height: 15px;\n  margin-right: 6px;\n  border-radius: 3px;\n  margin-top: 8px;\n  cursor: pointer;\n  transition: background-color 100ms ease-in-out;\n\n  &:hover {\n    background-color: ${(props) => (props.isDone ? '#0d6efd' : '#0d6efd23')};\n  }\n`;\n\nexport const TextareaContainer = styled.div`\n  width: 100%;\n  padding-right: 14px;\n\n  &:hover {\n    & > .removeTask {\n      display: flex;\n    }\n  }\n`;\n\nexport const RemoveTask = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 24px;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  display: none;\n  cursor: pointer;\n  background-color: #f44336;\n\n  & > svg {\n    color: #fff;\n  }\n\n  &:hover {\n    filter: brightness(0.8);\n  }\n`;\n\nexport const DragArea = styled.div`\n  width: fit-content;\n  margin: 0;\n  padding: 4px 0;\n  position: absolute;\n  top: 6px;\n  right: -2px;\n  display: flex;\n`;\n\nexport const NoneTasks = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 10px;\n  text-align: center;\n  font-size: 14px;\n`;\n","export const framerOptions = {\n  initial: { height: 0, opacity: 0 },\n  animate: { height: 'auto', opacity: 1 },\n  transition: { duration: 0.25 },\n  exit: { height: 0, opacity: 0 },\n};\n","import React, { useContext } from 'react';\n\nimport { BoardContext } from '../../../contexts/BoardContext';\n\nimport {\n  Container,\n  Task,\n  CheckBox,\n  RemoveTask,\n  NoneTasks,\n  TextareaContainer,\n  DragArea,\n} from './styles';\nimport { Textarea } from '../../';\n\nimport { HiCheck } from 'react-icons/hi';\nimport { IoClose } from 'react-icons/io5';\nimport { GrDrag } from 'react-icons/gr';\nimport { framerOptions } from './framerOptions';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\ninterface Props {\n  tasks: any[];\n  columnId: string;\n  cardId: string;\n  setCurrentEditingTask: any;\n}\n\nexport const TasksList = ({\n  tasks,\n  columnId,\n  cardId,\n  setCurrentEditingTask,\n}: Props): JSX.Element => {\n  const boardContext = useContext(BoardContext);\n\n  return (\n    <Container {...framerOptions}>\n      <Droppable droppableId={`${columnId}-${cardId}`} type='tasks'>\n        {(providedDroppable) => (\n          <div ref={providedDroppable.innerRef}>\n            {!!tasks.length ? (\n              tasks.map(({ taskId, isDone, task }, index) => (\n                <Draggable draggableId={taskId} index={index} key={taskId}>\n                  {(providedDraggable) => (\n                    <div\n                      ref={providedDraggable.innerRef}\n                      {...providedDraggable.draggableProps}\n                    >\n                      <Task key={taskId}>\n                        <CheckBox\n                          isDone={isDone}\n                          onClick={() =>\n                            boardContext?.toggleTaskIsDone(columnId, cardId, taskId)\n                          }\n                        >\n                          {isDone && <HiCheck color='#fff' />}\n                        </CheckBox>\n\n                        <TextareaContainer>\n                          <Textarea\n                            autofocus={index === 0 && !task}\n                            value={task}\n                            isDone={!!isDone}\n                            handleChange={(\n                              ev: React.FormEvent<HTMLTextAreaElement>\n                            ) =>\n                              setCurrentEditingTask({\n                                columnId,\n                                cardId,\n                                taskId,\n                                taskText: ev.currentTarget.value,\n                              })\n                            }\n                          />\n\n                          <RemoveTask\n                            className='removeTask'\n                            onClick={() =>\n                              boardContext?.deleteCardTask({ columnId, cardId, taskId })\n                            }\n                          >\n                            <IoClose size={10} />\n                          </RemoveTask>\n                        </TextareaContainer>\n\n                        <DragArea\n                          {...providedDraggable.dragHandleProps}\n                          className='dragArea'\n                        >\n                          <GrDrag />\n                        </DragArea>\n                      </Task>\n                    </div>\n                  )}\n                </Draggable>\n              ))\n            ) : (\n              <NoneTasks>\n                {`This story has no tasks yet.\n            You can create one and start working :)`}\n              </NoneTasks>\n            )}\n            {providedDroppable.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\ninterface ColorProps {\n  background: string;\n  font: string;\n  shadow: string;\n}\n\ninterface ButtonProps {\n  horizontalPadding: number;\n  colors?: ColorProps;\n}\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 32px;\n`;\n\nexport const Description = styled.span`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 16px;\n`;\n\nexport const Label = styled.span`\n  display: block;\n  text-transform: uppercase;\n  font-size: 11px;\n  margin-bottom: 6px;\n  letter-spacing: 1px;\n`;\n\nexport const TaskTextarea = styled.textarea`\n  resize: none;\n  margin-bottom: 16px;\n  border: 1px solid #fff;\n  transition: 100ms ease-in-out;\n  outline: none;\n  background-color: #f3f3f4;\n  border-radius: 6px;\n  padding: 10px;\n  height: 100px;\n  font-size: 14px;\n\n  &:hover {\n    border: 1px solid #ccc;\n    box-shadow: 0 0 0 0.25rem rgb(13, 110, 253, 0.1);\n    background-color: #fff;\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(13, 110, 253, 0.35);\n    border: 1px solid rgb(13, 110, 253, 0.6);\n    background-color: #fff;\n  }\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Button = styled.button<ButtonProps>`\n  cursor: pointer;\n  background-color: ${(props) => props.colors?.background || '#EEE'};\n  padding-left: ${(props) => props.horizontalPadding}px;\n  padding-right: ${(props) => props.horizontalPadding}px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  color: ${(props) => props.colors?.font || '#000'};\n  border: 0;\n  font-size: 12px;\n  border-radius: 4px;\n  transition: 100ms ease-in-out;\n  outline: none;\n  margin-right: 8px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  filter: brightness(${(props) => (props.disabled ? '0.8' : '1')});\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n\n  &:hover {\n    filter: brightness(0.9);\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 0.25rem\n      ${(props) => props.colors?.shadow || 'rgb(168, 168, 168, 0.35)'};\n\n    &:active {\n      box-shadow: 0 0 0 0 #fff;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\ninterface SelectorProps {\n  background?: string;\n  isSelected: boolean;\n}\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 32px;\n  padding-right: 24px;\n`;\n\nexport const Selector = styled.div<SelectorProps>`\n  width: fit-content;\n  border-radius: 10px;\n  background-color: ${(props) => (props.background ? props.background : '')};\n  color: ${(props) => (props.color ? props.color : '')};\n  box-shadow: ${(props) =>\n    props.isSelected ? '0 0 0 0.25rem rgb(13, 110, 253, 0.35)' : ''};\n  padding: 2px 12px;\n  margin: 3px 11px 8px 0;\n  font-size: 12px;\n  cursor: pointer;\n  transition: 100ms ease-in-out;\n  user-select: none;\n  font-weight: 500;\n  border: 1px solid transparent;\n  border-color: ${(props) =>\n    props.isSelected ? 'rgb(13, 110, 253, 0.6)' : ''};\n\n  &:hover {\n    border-color: ${(props) =>\n      props.isSelected ? 'rgb(13, 110, 253, 0.6)' : '#ccc'};\n    box-shadow: 0 0 0 0.25rem rgb(13, 110, 253, 0.1);\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 0.25rem rgb(13, 110, 253, 0.35);\n    border: 1px solid rgb(13, 110, 253, 0.6);\n  }\n`;\n","export const tagColorsSchema = {\n  Backend: {\n    color: '#4caf50',\n    background: '#e8f5e9',\n  },\n  Bug: {\n    color: '#d32f2f',\n    background: '#d32f2f25',\n  },\n  Business: {\n    color: '#f57c00',\n    background: '#f57c0025',\n  },\n  Frontend: {\n    color: '#1976d2',\n    background: '#1976d225',\n  },\n  Devops: {\n    color: '#5d4037',\n    background: '#5d403725',\n  },\n  Mobile: {\n    color: '#673ab7',\n    background: '#673ab725',\n  },\n  QA: {\n    color: '#827717',\n    background: '#82771725',\n  },\n  'UX/UI': {\n    color: '#00897b',\n    background: '#00897b25',\n  },\n};\n","import React, { useState, useEffect } from 'react';\nimport { Container, Selector } from './styles'\nimport { tagColorsSchema } from '../../schemas/tagColorsSchema';\n\ninterface Props {\n  handleChange: React.MouseEventHandler<HTMLElement>;\n  selecteds: any[];\n}\n\nexport const TagsSelector = ({ handleChange, selecteds }: Props): JSX.Element=> {\n  const [options, setOptions] = useState<any[]>([])\n\n  const initialOptions = () => {\n    return Object.entries(tagColorsSchema).map(([tagName, tagData]) => ({\n      tagName: tagName,\n      ...tagData,\n      isSelected: false,\n    }));\n  };\n\n  const handleSelectTags = ({ tagName }: any) => {\n    const edited = options.map((item: any) =>\n      item.tagName === tagName\n        ? { ...item, isSelected: !item.isSelected }\n        : item\n    );\n    setOptions(edited);\n    const selectedTags: any = edited\n      .filter((tag) => !!tag.isSelected)\n      .map((tag) => tag.tagName);\n    handleChange(selectedTags);\n  };\n\n  useEffect(() => {\n    const test = initialOptions().map((option) =>\n      selecteds.includes(option.tagName)\n        ? { ...option, isSelected: true }\n        : option\n    );\n    setOptions(test);\n  }, [selecteds]);\n\n  return (\n    <Container>\n      {options.map(({ tagName, isSelected, color, background }) => {\n        return (\n          <Selector\n            key={tagName}\n            onClick={() => handleSelectTags({ tagName: tagName })}\n            isSelected={isSelected}\n            color={color}\n            background={background}\n          >\n            {tagName}\n          </Selector>\n        )\n      })}\n    </Container>\n  );\n}\n","import { useContext, useRef } from 'react';\nimport { BoardContext } from '../../contexts/BoardContext';\n\nimport {\n  Container,\n  Description,\n  Label,\n  TaskTextarea,\n  ButtonsContainer,\n  Button,\n} from './styles';\nimport { Modal } from '../';\nimport { EditorContext } from '../../contexts/EditorContext';\nimport { TagsSelector } from '../TagsSelector';\n\nexport const CardEditor = (): JSX.Element => {\n  const boardContext = useContext(BoardContext);\n  const editorContext = useContext(EditorContext);\n\n  const currentEditing = editorContext?.editor.currentEditing;\n\n  const { columnName, columnId, cardId, description, tags } = currentEditing;\n\n  const textareaRef = useRef(null);\n\n  const executeOperationFunction = (type: any) => {\n    const types = {\n      create: () => boardContext?.createCardOnColumn(columnId, currentEditing),\n      update: () =>\n        boardContext?.updateCardFromColumn(columnId, currentEditing),\n    };\n    if (type === 'create') return types.create();\n    if (type === 'update') return types.update();\n  };\n\n  const handleButtonAction = (type: any) => {\n    executeOperationFunction(type);\n    editorContext?.handleCloseEditor();\n  };\n\n  return (\n    <Modal\n      isModalOpen={editorContext?.editor.isEditorOpen}\n      handleCloseEditor={editorContext?.handleCloseEditor}\n    >\n      <Container>\n        <Description>\n          {`${!cardId ? 'Creating card in' : 'Editing card in'} ${columnName}`}\n        </Description>\n\n        <Label>Description</Label>\n\n        <TaskTextarea\n          ref={textareaRef}\n          placeholder='Type a description here'\n          defaultValue={description}\n          onChange={(ev) =>\n            editorContext?.handleEditCardData({\n              key: 'description',\n              value: ev.target.value,\n            })\n          }\n        />\n\n        <Label>Tags</Label>\n\n        <TagsSelector\n          handleChange={(cardTags) =>\n            editorContext?.handleEditCardData({ key: 'tags', value: cardTags })\n          }\n          selecteds={tags}\n        />\n\n        <ButtonsContainer>\n          <Button\n            onClick={() => editorContext?.handleCloseEditor()}\n            horizontalPadding={16}\n          >\n            Cancel\n          </Button>\n\n          {!cardId && (\n            <Button\n              onClick={() => handleButtonAction('create')}\n              horizontalPadding={32}\n              disabled={!description.trim() || !tags.length}\n              colors={{\n                background: '#279EFF',\n                font: '#FFF',\n                shadow: 'rgb(13, 110, 253, 0.35)',\n              }}\n            >\n              Create\n            </Button>\n          )}\n\n          {!!cardId && (\n            <Button\n              onClick={() => handleButtonAction('update')}\n              horizontalPadding={32}\n              disabled={!description.trim() || !tags.length}\n              colors={{\n                background: '#039be5',\n                font: '#FFF',\n                shadow: 'rgb(13, 110, 253, 0.35)',\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        </ButtonsContainer>\n      </Container>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  background-color: #eee;\n  padding: 12px;\n  margin: 16px 0 12px 0;\n  width: 300px;\n  min-height: 100px;\n  border-radius: 8px;\n  transition: 100ms ease-in-out;\n  overflow: hidden;\n  overflow-anchor: none;\n  position: relative;\n`;\n","import { Droppable } from 'react-beautiful-dnd';\nimport { ListContainer } from './styles';\n\ninterface Props {\n  children: JSX.Element;\n  id: string;\n}\n\nexport const CardsList = ({ id, children }: Props): JSX.Element => {\n  return (\n    <Droppable droppableId={id} type='cards'>\n      {(provided) => (\n        <ListContainer ref={provided.innerRef} {...provided.droppableProps}>\n          {children}\n          {provided.placeholder}\n        </ListContainer>\n      )}\n    </Droppable>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-right: 3px;\n  background-color: #fff;\n  border-radius: 6px;\n  height: fit-content;\n  padding: 0 12px;\n`;\n","import { Container } from './styles';\n\ninterface Props {\n  children: JSX.Element;\n}\n\nexport const Column = ({ children }: Props): JSX.Element => {\n  return <Container>{children}</Container>;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 0 0 0;\n`;\n\nexport const ColumnName = styled.span`\n  margin: 0;\n  font-size: 16px;\n  color: #000;\n  user-select: none;\n  font-weight: 500;\n`;\n\nexport const Counter = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  border-radius: 6px;\n  color: #000;\n  min-width: 24px;\n  height: 24px;\n  user-select: none;\n  font-weight: 500;\n`;\n","import { Container, ColumnName, Counter } from './styles';\n\ninterface Props {\n  columnName: string;\n  totalCards: number;\n}\n\nexport const ColumnInfo = ({ columnName, totalCards }: Props): JSX.Element => {\n  return (\n    <Container>\n      <ColumnName>{columnName}</ColumnName>\n      <Counter>{totalCards}</Counter>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 3;\n`;\n\nexport const Backdrop = styled(motion.div)`\n  background-color: rgba(0, 0, 0, 0.55);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nexport const ModalWindow = styled(motion.div)`\n  width: 500px;\n  min-height: 300px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\n    rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n  z-index: 3;\n`;\n\nexport const ModalContent = styled(motion.div)``;\n","export const framerOptions = {\n  backdropAnimation: {\n    initial: { opacity: 0 },\n    animate: { opacity: 1 },\n    exit: {\n      opacity: 0,\n      transition: {\n        delay: 0.05,\n      },\n    },\n    transition: { duration: 0.2 },\n  },\n  modalWindowAnimation: {\n    initial: { scale: 0 },\n    animate: { scale: 1 },\n    exit: { scale: 0 },\n    transition: { duration: 0.2 },\n  },\n  modalContentAnimation: {\n    initial: { opacity: 0 },\n    animate: { opacity: 1 },\n    exit: {\n      opacity: 0,\n      transition: {\n        delay: -1,\n      },\n    },\n    transition: { duration: 0.5 },\n  },\n};\n","import { Container, Backdrop, ModalWindow, ModalContent } from './styles';\nimport { AnimatePresence } from 'framer-motion';\nimport { framerOptions } from './framerOptions';\n\ninterface Props {\n  children: JSX.Element;\n  isModalOpen: boolean;\n  handleCloseEditor: any;\n}\n\nexport const Modal = ({\n  children,\n  isModalOpen,\n  handleCloseEditor,\n}: Props): JSX.Element => {\n  const { backdropAnimation, modalWindowAnimation, modalContentAnimation } =\n    framerOptions;\n\n  return (\n    <AnimatePresence>\n      {isModalOpen && (\n        <Container>\n          <Backdrop {...backdropAnimation} onClick={handleCloseEditor} />\n\n          <ModalWindow {...modalWindowAnimation}>\n            <ModalContent {...modalContentAnimation}>{children}</ModalContent>\n          </ModalWindow>\n        </Container>\n      )}\n    </AnimatePresence>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.span`\n  text-align: center;\n  font-size: 13px;\n  padding: 16px;\n  user-select: none;\n`;\n","import { Container, Text } from './styles';\n\nexport function NoCardsPlaceholder() {\n  return (\n    <Container>\n      <Text>No cards in this column. Drag here or create a new one.</Text>\n    </Container>\n  );\n}\n","import { tagColorsSchema } from '../schemas/tagColorsSchema';\n\nexport function returnColorSchemaItem(type: string) {\n  if (type === 'Backend') return tagColorsSchema.Backend;\n  if (type === 'Bug') return tagColorsSchema.Bug;\n  if (type === 'Business') return tagColorsSchema.Business;\n  if (type === 'Frontend') return tagColorsSchema.Frontend;\n  if (type === 'Devops') return tagColorsSchema.Devops;\n  if (type === 'Mobile') return tagColorsSchema.Mobile;\n  if (type === 'QA') return tagColorsSchema.QA;\n  if (type === 'UX/UI') return tagColorsSchema['UX/UI'];\n}\n","import styled from 'styled-components';\nimport { returnColorSchemaItem } from '../../utils/returnColorsSchemaItem';\n\ninterface Props {\n  tag?: string;\n  isFocused?: boolean;\n}\n\nexport const Container = styled.div<Props>`\n  padding: 2px 12px;\n  margin: 0 6px 6px 0;\n  border-radius: 10px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${(props) =>\n    returnColorSchemaItem(props.tag!)?.background || '#fff'};\n  color: ${(props) => returnColorSchemaItem(props.tag!)?.color || '#fff'};\n  display: flex;\n  align-items: center;\n  position: relative;\n  transition: 100ms ease-in-out;\n  box-shadow: ${(props) =>\n    props.isFocused ? '0 0 0 0.25rem rgb(13, 110, 253, 0.35)' : ''};\n`;\n\nexport const RemoveTask = styled.div`\n  position: relative;\n  left: 6px;\n  width: 26px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: #f44336;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  background-color: #ffcdd2;\n\n  & > svg {\n    color: #f44336;\n  }\n\n  &:hover {\n    & > svg {\n      filter: brightness(0.8);\n    }\n  }\n`;\n","import { Container } from './styles';\n\ninterface TagProps {\n  children: JSX.Element;\n  tag: string;\n}\n\nexport const Tag = ({ children, tag }: TagProps): JSX.Element => {\n  return <Container tag={tag}>{children}</Container>;\n};\n","import styled from 'styled-components';\nimport TextareaAutosize from 'react-autosize-textarea';\n\ninterface Props {\n  isDone: boolean;\n}\n\ninterface InputProps {\n  onChange: React.FormEventHandler<HTMLTextAreaElement>;\n}\n\nexport const Container = styled.div<Props>`\n  display: flex;\n  width: 100%;\n  text-decoration: ${(props) => (props.isDone ? 'line-through' : 'none')};\n`;\n\nexport const Field = styled(TextareaAutosize)<InputProps>`\n  min-height: 36px;\n  width: 100%;\n  margin: 4px 2px;\n  padding: 0 4px;\n  resize: none;\n  border: none;\n  outline: none;\n  font-family: inherit;\n  overflow: hidden;\n  box-sizing: content-box;\n  transition: box-shadow 100ms ease-in-out;\n  font-size: 13px;\n\n  &:hover {\n    box-shadow: 0 0 0 0.1rem rgba(0, 0, 0, 0.1);\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 0.1rem #000;\n  }\n`;\n","import { useRef, useEffect } from 'react';\nimport { Container, Field } from './styles';\n\ninterface Props {\n  value: string;\n  handleChange: React.FormEventHandler<HTMLTextAreaElement>;\n  autofocus: boolean;\n  isDone: boolean;\n}\n\nexport const Textarea = ({\n  value,\n  handleChange,\n  autofocus,\n  isDone,\n}: Props): JSX.Element => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null!);\n\n  useEffect(() => {\n    if (autofocus) textareaRef.current.focus();\n  }, [autofocus]);\n\n  return (\n    <Container isDone={isDone}>\n      <Field\n        ref={textareaRef}\n        async={true}\n        defaultValue={value}\n        onChange={handleChange}\n      />\n    </Container>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  html,\n  body,\n  #root {\n    min-height: 100vh;\n  }\n\n  body {\n    font-family: 'Poppins', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    margin: 0;\n    padding: 0;\n    background-color: #FFF;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  button, textarea {\n    font-family: inherit;\n  }\n`;\n","import { Board, CardEditor } from './components';\nimport { GlobalStyles } from './GlobalStyles';\n\nexport default function App() {\n  return (\n    <>\n      <Board />\n      <CardEditor />\n      <GlobalStyles />\n    </>\n  );\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BoardProvider } from './contexts/BoardContext';\nimport { EditorProvider } from './contexts/EditorContext';\n\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <BoardProvider>\n      <EditorProvider>\n        <App />\n      </EditorProvider>\n    </BoardProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}